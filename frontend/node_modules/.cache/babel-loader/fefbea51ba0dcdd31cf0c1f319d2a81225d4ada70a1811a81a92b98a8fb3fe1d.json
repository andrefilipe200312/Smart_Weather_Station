{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Documents\\\\site_projeto\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navbar from './Components/Navbar';\nimport Mapa from './Components/Mapa';\nimport ClimaBoxes from './Components/ClimaBoxes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mensagem, setMensagem] = useState('');\n  const [dadosClima, setDadosClima] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [erro, setErro] = useState(null);\n  useEffect(() => {\n    // Função para buscar dados do servidor\n    const fetchData = async () => {\n      try {\n        // Buscar dados climáticos\n        const climaRes = await axios.get('/api/clima');\n        if (climaRes.data.success) {\n          setDadosClima(climaRes.data.data);\n          setErro(null); // Limpar erro se sucesso\n        } else {\n          setErro(climaRes.data.message || 'Erro ao obter dados');\n        }\n      } catch (err) {\n        console.error('Erro ao buscar dados:', err);\n        setErro('Erro ao carregar dados climáticos');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n\n    // Atualizar dados a cada 30 segundos\n    const interval = setInterval(fetchData, 30000);\n\n    // Cleanup do interval quando o componente for desmontado\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: '80px 20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Frontend React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClimaBoxes, {\n        dadosClima: dadosClima,\n        loading: loading,\n        erro: erro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mapa, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2fOvGJALGNhG/N7h/pU/O/0X76M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","Mapa","ClimaBoxes","jsxDEV","_jsxDEV","App","_s","mensagem","setMensagem","dadosClima","setDadosClima","loading","setLoading","erro","setErro","fetchData","climaRes","get","data","success","message","err","console","error","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","_c","$RefreshReg$"],"sources":["C:/Users/andre/Documents/site_projeto/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navbar from './Components/Navbar';\nimport Mapa from './Components/Mapa';\nimport ClimaBoxes from './Components/ClimaBoxes';\n\nfunction App() {\n  const [mensagem, setMensagem] = useState('');\n  const [dadosClima, setDadosClima] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [erro, setErro] = useState(null);\n\n  useEffect(() => {\n    // Função para buscar dados do servidor\n    const fetchData = async () => {\n      try {\n        \n        // Buscar dados climáticos\n        const climaRes = await axios.get('/api/clima');\n        if (climaRes.data.success) {\n          setDadosClima(climaRes.data.data);\n          setErro(null); // Limpar erro se sucesso\n        } else {\n          setErro(climaRes.data.message || 'Erro ao obter dados');\n        }\n      } catch (err) {\n        console.error('Erro ao buscar dados:', err);\n        setErro('Erro ao carregar dados climáticos');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n\n    // Atualizar dados a cada 30 segundos\n    const interval = setInterval(fetchData, 30000);\n\n    // Cleanup do interval quando o componente for desmontado\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <main style={{ padding: '80px 20px' }}>\n        <h1>Frontend React</h1>\n        <p>{mensagem}</p>\n\n        <ClimaBoxes \n          dadosClima={dadosClima}\n          loading={loading}\n          erro={erro}\n        />\n      </main>\n      <Mapa />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Documents\\\\site_projeto\\\\frontend\\\\src\\\\Components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [batteryLevel, setBatteryLevel] = useState(null);\n  useEffect(() => {\n    const fetchBattery = async () => {\n      try {\n        const response = await fetch('/api/clima');\n        const json = await response.json();\n        if (json.success && json.data.Bateria) {\n          setBatteryLevel(json.data.Bateria.value);\n        } else {\n          setBatteryLevel('N/A');\n        }\n      } catch (error) {\n        console.error(\"Erro ao buscar bateria:\", error);\n        setBatteryLevel('Erro');\n      }\n    };\n    fetchBattery();\n\n    // Opcional: atualizar a cada X minutos\n    const interval = setInterval(fetchBattery, 60000); // 60s\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-title\",\n      children: \"Smart Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-links\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"In\\xEDcio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/hist\\xF3rico\",\n          children: \"Hist\\xF3rico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sobre\",\n          children: \"Sobre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battery-indicator\",\n      children: [\"\\uD83D\\uDD0B \", batteryLevel !== null ? `${batteryLevel}%` : '...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"ZL199ws7Pkxw9dqzrQyPIhTKoIQ=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Navbar","_s","batteryLevel","setBatteryLevel","fetchBattery","response","fetch","json","success","data","Bateria","value","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/andre/Documents/site_projeto/frontend/src/Components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  const [batteryLevel, setBatteryLevel] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBattery = async () => {\r\n      try {\r\n        const response = await fetch('/api/clima');\r\n        const json = await response.json();\r\n        if (json.success && json.data.Bateria) {\r\n          setBatteryLevel(json.data.Bateria.value);\r\n        } else {\r\n          setBatteryLevel('N/A');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar bateria:\", error);\r\n        setBatteryLevel('Erro');\r\n      }\r\n    };\r\n\r\n    fetchBattery();\r\n\r\n    // Opcional: atualizar a cada X minutos\r\n    const interval = setInterval(fetchBattery, 60000); // 60s\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-title\">Smart Weather App</div>\r\n      <ul className=\"navbar-links\">\r\n        <li><Link to=\"/\">InÃ­cio</Link></li>\r\n        <li><Link to=\"/histÃ³rico\">HistÃ³rico</Link></li>\r\n        <li><Link to=\"/sobre\">Sobre</Link></li>\r\n      </ul>\r\n      <div className=\"battery-indicator\">\r\n        ðŸ”‹ {batteryLevel !== null ? `${batteryLevel}%` : '...'}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}